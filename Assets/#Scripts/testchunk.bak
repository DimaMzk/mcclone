Block[, ,] testChunk = new Block[255, 16, 16];

        for (int y = 0; y < 255; y++)
        {
            for (int i = 0; i < 16; i++)
            {
                for (int j = 0; j < 16; j++)
                {

                    // When placing block, we much add .5 to each axis

                    // Creating a 3d array to hold a single chunk
                    // block maps;
                    // 0 = air
                    // 1 = dirt
                    // 2 = grass
                    // 3 = wood
                    // 4 = leaf

                    if(y < 56)
                    {
                        testChunk[y, i, j] = DIRT;
                    }

                    else if(y == 56)
                    {
                        testChunk[y, i, j] = GRASS;
                    }

                    else
                    {
                        testChunk[y, i, j] = AIR;
                    }
                }
            }
            
        }

        //Manual Blocks

        testChunk[57, 5, 7] = WOOD;
        testChunk[58, 5, 7] = WOOD;
        testChunk[59, 5, 7] = WOOD;
        
        testChunk[60, 5, 7] = LEAF;
        testChunk[60, 5, 8] = LEAF;
        testChunk[60, 5, 6] = LEAF;
        testChunk[60, 4, 7] = LEAF;
        testChunk[60, 4, 8] = LEAF;
        testChunk[60, 4, 6] = LEAF;
        testChunk[60, 6, 7] = LEAF;
        testChunk[60, 6, 8] = LEAF;
        testChunk[60, 6, 6] = LEAF;

        testChunk[61, 5, 7] = LEAF;
        testChunk[61, 5, 8] = LEAF;
        testChunk[61, 5, 6] = LEAF;
        testChunk[61, 4, 7] = LEAF;
        testChunk[61, 6, 7] = LEAF;


        testChunk[62, 5, 7] = LEAF;

        testChunk[56, 5, 5] = AIR;
        testChunk[56, 5, 4] = AIR;
        testChunk[55, 5, 4] = AIR;
        testChunk[55, 5, 5] = AIR;
        testChunk[54, 5, 5] = AIR;
        testChunk[53, 5, 5] = AIR;
        testChunk[53, 5, 5] = AIR;



        // Set all the chunks as testChunk
        for(int i = 0; i < 999999; i++)
        {
            Chunk.setChunk(i, testChunk);

        }